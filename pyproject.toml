[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "project_name"
version = "0.1.0"
description = "A project template following clean architecture principles"
readme = "README.md"
requires-python = ">=3.11"
license = { text = "MIT" }
authors = [{ name = "Your Name", email = "your.email@example.com" }]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = ["fastapi>=0.115.12", "pydantic>=2.6.0", "uvicorn>=0.34.2"]

[project.scripts]
project_name = "project_name.main:main"

[dependency-groups]
dev = [
    "httpx>=0.28.1",
    "pyclean>=3.1.0",
    "pytest>=8.3.5",
    "pytest-cov>=6.1.1",
    "pytest-timeout>=2.4.0",
    "ruff>=0.11.9",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
markers = [
    "unit: marks tests as unit tests",
    "integration: marks tests as integration tests",
]

[tool.ruff]
line-length = 120
target-version = "py311"
fix = true
output-format = "grouped"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "SIM", # flake8-simplify
    "TID", # flake8-tidy-imports
]
ignore = [
    "E203", # whitespace before ':' (conflicts with black)
]

[tool.ruff.lint.isort]
known-first-party = ["project_name"]

[tool.mypy]
python_version = "3.11"
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.coverage.run]
source = ["src"]
omit = ["tests/*"]

[tool.bandit]
targets = ["src"]
exclude_dirs = ["tests"]
